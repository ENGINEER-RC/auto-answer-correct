Static Loading Time In Python: 6.642989

seqvar= 0.2
langvar= 0.8
keylostvar= 0.5
garbagevar1= 1.5
garbagevar2= 10
levenshtein Fault tolerance=0.2

Replacing and Encoding JSON data In Python: 6.642989

Calcaulating Garbage: 6.642989

Marks After Garbage Evaluation: 100.000000

Sentance Tokenization of Student Answer : 6.645990

Sentance 0: constantinople conqured ottoman turks in 1455. 
Sentance 1: the short way to Asia was closed down for the European traders. 
Sentance 2: short route was under the control of the turks
Sentance 3: so europeans found a new sea route

Finding Negations of Answer String | Word Tozenizing Answers | Grammar Checking : 10.920229

Grammar Matrix After parsing [1, 1, 1, 1]

Negation Matrix After parsing [0, 0, 0, 0]

Parsing qna keyword data into useful format : 10.920229
Metadata to keywords [0, 4, 1, 9, 2, 14]

0
Sentance Keyword 3: ['1453']
Tuppledata per Keyword:  [0, 0, 0, 0] 

0
Sentance Keyword 3: ['Constantinople']
Tuppledata per Keyword:  [1, 0, 0, 0] 

0
Sentance Keyword 3: ['conquered', 'seize', 'capture']
Tuppledata per Keyword:  [1, 0, 0, 0] 

0
Sentance Keyword 3: ['Ottoman_Turks', 'Ottoman']
Tuppledata per Keyword:  [1, 0, 0, 0] 

Cross Matrix:  [3, 0, 0, 0] 


1
Sentance Keyword 3: ['way', 'path']
Tuppledata per Keyword:  [0, 1, 0, 0] 

1
Sentance Keyword 3: ['Asia']
Tuppledata per Keyword:  [0, 1, 0, 0] 

1
Sentance Keyword 3: ['closed', 'shut_down', 'close_up']
Tuppledata per Keyword:  [0, 1, 0, 0] 

1
Sentance Keyword 3: ['European']
Tuppledata per Keyword:  [0, 1, 0, 1] 

1
Sentance Keyword 3: ['traders', 'trader']
Tuppledata per Keyword:  [0, 1, 0, 0] 

Cross Matrix:  [0, 5, 0, 1] 


3
Sentance Keyword 3: ['increased', 'increase']
Tuppledata per Keyword:  [0, 0, 0, 0] 

3
Sentance Keyword 3: ['business', 'business_sector']
Tuppledata per Keyword:  [0, 0, 0, 0] 

3
Sentance Keyword 3: ['Europe']
Tuppledata per Keyword:  [0, 1, 0, 1] 

3
Sentance Keyword 3: ['route', 'road', 'path']
Tuppledata per Keyword:  [0, 0, 1, 1] 

3
Sentance Keyword 3: ['Turks']
Tuppledata per Keyword:  [1, 0, 1, 0] 

Cross Matrix:  [1, 1, 2, 2] 


matching student Answer data keywords With Stem and levenshtein
Generating Cross-Matrix result based on qna keyword data: 11.157170

cross matrix Tupple1: [0, 0.75, 0]
Marks For This point Are Deducted: Reason-Grammar
Marks For This point Are Deducted: Reason-KeyWord-Count
Marks for Alloted for point 0: 10.000000

cross matrix Tupple1: [1, 1.0, 1]
Marks For This point Are Deducted: Reason-Grammar
Marks for Alloted for point 1: 26.666667

cross matrix Tupple1: [2, 0.4, 2]
Marks For This point Are Deducted: Reason-Grammar
Marks For This point Are Deducted: Reason-KeyWord-Count
Marks for Alloted for point 2: 5.333333

Final Matrix Operations and Marks Calculation Percentage Wise
Final Marks Assigned To Student For This Answer: 42

Total Time Spent In python: 11.157170
